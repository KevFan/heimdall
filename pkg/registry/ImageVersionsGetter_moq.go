// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package registry

import (
	"github.com/integr8ly/heimdall/pkg/rhcc"
	"sync"
)

var (
	lockImageVersionsGetterMockAvailableTagsSortedByDate sync.RWMutex
)

// Ensure, that ImageVersionsGetterMock does implement ImageVersionsGetter.
// If this is not the case, regenerate this file with moq.
var _ ImageVersionsGetter = &ImageVersionsGetterMock{}

// ImageVersionsGetterMock is a mock implementation of ImageVersionsGetter.
//
//     func TestSomethingThatUsesImageVersionsGetter(t *testing.T) {
//
//         // make and configure a mocked ImageVersionsGetter
//         mockedImageVersionsGetter := &ImageVersionsGetterMock{
//             AvailableTagsSortedByDateFunc: func(in1 string) ([]rhcc.Tag, error) {
// 	               panic("mock out the AvailableTagsSortedByDate method")
//             },
//         }
//
//         // use mockedImageVersionsGetter in code that requires ImageVersionsGetter
//         // and then make assertions.
//
//     }
type ImageVersionsGetterMock struct {
	// AvailableTagsSortedByDateFunc mocks the AvailableTagsSortedByDate method.
	AvailableTagsSortedByDateFunc func(in1 string) ([]rhcc.Tag, error)

	// calls tracks calls to the methods.
	calls struct {
		// AvailableTagsSortedByDate holds details about calls to the AvailableTagsSortedByDate method.
		AvailableTagsSortedByDate []struct {
			// In1 is the in1 argument value.
			In1 string
		}
	}
}

// AvailableTagsSortedByDate calls AvailableTagsSortedByDateFunc.
func (mock *ImageVersionsGetterMock) AvailableTagsSortedByDate(in1 string) ([]rhcc.Tag, error) {
	if mock.AvailableTagsSortedByDateFunc == nil {
		panic("ImageVersionsGetterMock.AvailableTagsSortedByDateFunc: method is nil but ImageVersionsGetter.AvailableTagsSortedByDate was just called")
	}
	callInfo := struct {
		In1 string
	}{
		In1: in1,
	}
	lockImageVersionsGetterMockAvailableTagsSortedByDate.Lock()
	mock.calls.AvailableTagsSortedByDate = append(mock.calls.AvailableTagsSortedByDate, callInfo)
	lockImageVersionsGetterMockAvailableTagsSortedByDate.Unlock()
	return mock.AvailableTagsSortedByDateFunc(in1)
}

// AvailableTagsSortedByDateCalls gets all the calls that were made to AvailableTagsSortedByDate.
// Check the length with:
//     len(mockedImageVersionsGetter.AvailableTagsSortedByDateCalls())
func (mock *ImageVersionsGetterMock) AvailableTagsSortedByDateCalls() []struct {
	In1 string
} {
	var calls []struct {
		In1 string
	}
	lockImageVersionsGetterMockAvailableTagsSortedByDate.RLock()
	calls = mock.calls.AvailableTagsSortedByDate
	lockImageVersionsGetterMockAvailableTagsSortedByDate.RUnlock()
	return calls
}
